/********************金逸晨**************************
*****************GM12864T-5D    9PIN SPI FOR Arduino*************
*****3----3SCK,   4----4SDA,      5---5RST,
      6---6DC,      7----7CS
*****BY:GU
*********ST7565R
本模块自带背光限流电阻，可直接将LED_A接VDD,LED_K接GND

90度旋转显示，图片需要更改取模方式

演示代码仅演示16*15汉字旋转
********************************************************/
#define SPI_SDA_0  digitalWrite(3,LOW)             
#define SPI_SDA_1  digitalWrite(3,HIGH) 
#define SPI_SCK_0  digitalWrite(4,LOW)               
#define SPI_SCK_1  digitalWrite(4,HIGH)
#define SPI_DC_0  digitalWrite(5,LOW)               
#define SPI_DC_1  digitalWrite(5,HIGH)
#define SPI_RST_0  digitalWrite(6,LOW)               
#define SPI_RST_1  digitalWrite(6,HIGH)
#define SPI_CS_0  digitalWrite(7,LOW)               
#define SPI_CS_1  digitalWrite(7,HIGH)
//#define SPI_CS2_0  digitalWrite(9,LOW)               
//#define SPI_CS2_1  digitalWrite(9,HIGH)
//#define SPI_FSO    digitalRead(8)

void  IO_init(void )
{
pinMode(3,OUTPUT);//设置数字脚为输出
pinMode(4,OUTPUT);//设置数字脚为输出
pinMode(5,OUTPUT);//设置数字脚为输出
pinMode(6,OUTPUT);//设置数字脚为输出
pinMode(7,OUTPUT);//设置数字脚为输出
pinMode(9,OUTPUT);//设置数字脚为输出
pinMode(8,INPUT);//设置数字脚为输入
}


#define LCD_DIS_CHINA_ROT  90        //选择屏幕旋转参数，不旋转0，旋转90度：90，旋转180度：180
//#define LCD_DIS_CHINA_ROT  180
//#define LCD_DIS_CHINA_ROT  0

#define LCD_COLUMN_NUMBER 128
#define LCD_LINE_NUMBER 64 

  #if  (LCD_DIS_CHINA_ROT == 180) 
  #define LCD_COLUMN_OFFSET 3         //旋转180度需要加3个偏移量
  #else 
  #define LCD_COLUMN_OFFSET 1
  #endif
  

#define LCD_PAGE_NUMBER (LCD_LINE_NUMBER/8)
#define LCD_COMMAND_NUMBER  14


const unsigned char *point;
unsigned char READ_BACK[32];                    ////一个汉字最大返回32个字节
unsigned char CHAR_DATA[32];
const unsigned char  LCD_init_cmd[LCD_COMMAND_NUMBER]=
{
        0xa2,//bias set:1/9
     0xa0,//ADC select:nomal,0->128
     0xa6,//normal/reverse  display
     0xc8,//commom output mode select: reverse
     0xf8,//booster ratio set
     0x00,//booster ratio:4x
     0x2f,//power control set
     0x26,//set (Rb/Ra)
     0x81,//vo output voltage set
     0x09,//voltage volume =9.0v
  #if (LCD_DIS_CHINA_ROT == 180) 
  0xA1, //列扫描顺序：从左到右
  0xc0, //行扫描顺序：反序
  #else 
  0xA0, //列扫描顺序：从左到右
  0xc8, //行扫描顺序：反序
  #endif
     0x60,//set start line
     0xaf,//display on  
};

const unsigned char  picture_tab[]={
/*------------------------------------------------------------------------------
;  列行式，低位在前，阴码
;  宽×高（像素）: 128×64
------------------------------------------------------------------------------*/
    0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x20,0x44,0x08,0x00,0x18,0x48,0x28,0xC8,0x08,0x28,0x48,0x18,0x00,
0x40,0x40,0xFC,0x40,0x40,0xFC,0x00,0x00,0xF8,0x00,0x00,0xFC,0x00,0x40,0x40,0xA0,
0x90,0x88,0x84,0x88,0x90,0x20,0x40,0x40,0x00,0x00,0x40,0x44,0xD8,0x20,0xF0,0xAC,
0xA8,0xE8,0xB8,0xA8,0xE0,0x00,0x00,0x00,0xC0,0x7C,0x54,0x54,0x54,0x54,0x54,0x54,
0x7C,0x40,0x40,0x00,0x00,0xF0,0x90,0x90,0x90,0xFC,0x90,0x90,0x90,0xF0,0x00,0x00,
0x00,0x80,0x88,0x88,0x88,0x88,0x88,0xE8,0xA8,0x98,0x8C,0x88,0x80,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x04,0x3E,0x01,0x10,0x11,0x09,0x05,0x3F,0x05,0x09,0x11,0x11,0x00,
0x08,0x18,0x0F,0x24,0x14,0x0F,0x00,0x00,0x0F,0x00,0x00,0x3F,0x00,0x20,0x22,0x2A,
0x32,0x22,0x3F,0x22,0x32,0x2A,0x22,0x20,0x00,0x00,0x20,0x10,0x0F,0x10,0x28,0x24,
0x23,0x20,0x2F,0x28,0x2A,0x2C,0x00,0x30,0x0F,0x04,0x3D,0x25,0x15,0x15,0x0D,0x15,
0x2D,0x24,0x24,0x00,0x00,0x07,0x04,0x04,0x04,0x1F,0x24,0x24,0x24,0x27,0x20,0x38,
0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF,
0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x81,0x41,0x21,0x21,0x61,0x01,0x01,0x21,0xE1,0xE1,0x01,0xE1,0xE1,
0x21,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x21,0xE1,0x21,0x21,0x21,0x61,0x01,0x01,
0x21,0x21,0xE1,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0xC1,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x21,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x0F,0x10,0x20,0x24,0x1C,0x04,0x00,0x20,0x3F,0x01,0x3E,0x01,0x3F,
0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x22,0x22,0x27,0x30,0x00,0x00,
0x20,0x20,0x3F,0x20,0x20,0x00,0x00,0x1E,0x25,0x25,0x25,0x16,0x00,0x00,0x1E,0x21,
0x21,0x21,0x13,0x00,0x01,0x01,0x1F,0x21,0x21,0x00,0x00,0x00,0x21,0x3F,0x22,0x21,
0x01,0x00,0x00,0x1E,0x21,0x21,0x21,0x1E,0x00,0x21,0x3F,0x22,0x01,0x01,0x3E,0x20,
0x00,0x21,0x21,0x3F,0x20,0x20,0x00,0x00,0x1E,0x21,0x21,0x21,0x13,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xF0,0x08,0x04,0x04,0x04,0x0C,0x00,0xF0,0x08,0x04,0x04,0x08,0xF0,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xFC,0x04,0x00,
0x00,0x00,0x00,0x00,0x0C,0x04,0xFC,0x04,0x0C,0x00,0x04,0xFC,0x04,0x04,0x08,0xF0,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x81,0x82,0x84,0x84,0x84,0x82,0x80,0x81,0x82,0x84,0x84,0x82,0x81,
0x80,0x80,0x86,0x86,0x80,0x80,0x80,0x80,0x80,0x85,0x83,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x84,0x87,0x84,0x84,
0x84,0x86,0x80,0x80,0x80,0x84,0x87,0x84,0x80,0x80,0x84,0x87,0x84,0x84,0x82,0x81,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF

};
const unsigned char  China_tab[][32]={
/*------------------------------------------------------------------------------
;  列行式，低位在前，阴码
;  
------------------------------------------------------------------------------*/
{0x10,0x60,0x02,0x8C,0x00,0x0E,0x22,0x12,0x0A,0xC2,0x0A,0x12,0x22,0x0E,0x00,0x00,
0x04,0x04,0x7E,0x01,0x20,0x21,0x11,0x09,0x05,0xFF,0x05,0x09,0x11,0x21,0x20,0x00},/*"深",0*/

{0x20,0x20,0x20,0xFF,0x20,0x20,0x00,0xFF,0x00,0x00,0xFE,0x00,0x00,0xFF,0x00,0x00,
0x10,0x30,0x10,0x0F,0x08,0x88,0x60,0x1F,0x00,0x00,0x3F,0x00,0x00,0xFF,0x00,0x00},/*"圳",1*/

{0x80,0x80,0x40,0x20,0x50,0x48,0x44,0xC3,0x44,0x48,0x50,0x20,0x40,0x80,0x80,0x00,
0x40,0x40,0x42,0x4A,0x72,0x42,0x42,0x7F,0x42,0x42,0x62,0x5A,0x42,0x40,0x40,0x00},/*"金",2*/

{0x40,0x42,0xCC,0x00,0x20,0xF0,0x28,0x27,0x24,0xE4,0x34,0x2C,0x20,0xE0,0x00,0x00,
0x80,0x40,0x3F,0x40,0x80,0xA1,0x91,0x8D,0x83,0x81,0x9F,0xA5,0xA9,0xA1,0xB8,0x00},/*"逸",3*/

{0x00,0x00,0xC0,0x5F,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x5F,0x40,0x40,0x00,0x00,
0x80,0x60,0x1F,0x04,0xFD,0x85,0x45,0x0D,0x15,0x25,0x25,0x55,0x4D,0x84,0x84,0x00},/*"晨",4*/

{0x00,0x00,0xF8,0x88,0x88,0x88,0x88,0xFF,0x88,0x88,0x88,0x88,0xF8,0x00,0x00,0x00,
0x00,0x00,0x1F,0x08,0x08,0x08,0x08,0x7F,0x88,0x88,0x88,0x88,0x9F,0x80,0xF0,0x00},/*"电",5*/

{0x80,0x82,0x82,0x82,0x82,0x82,0x82,0xE2,0xA2,0x92,0x8A,0x86,0x82,0x80,0x80,0x00,
0x00,0x00,0x00,0x00,0x00,0x40,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"子",6*/

};
void delay_us(unsigned int _us_time)
{       
  unsigned char x=0;
  for(;_us_time>0;_us_time--)
  {
    x++;
  }
}

/*************SPI配置函数*******************
SCL空闲时低电平，第一个上升沿采样
模拟SPI
******************************************/

/**************************SPI模块发送函数************************************************

 *************************************************************************/
void SPI_SendByte(unsigned char byte)
{
  
  unsigned char counter;
   
  for(counter=0;counter<8;counter++)
  { 
    SPI_SCK_0;
    delay_us(1);
    if((byte&0x80)==0)
    {
      SPI_SDA_0;
      delay_us(1);
    }
    else SPI_SDA_1;
    byte=byte<<1;
  delay_us(1);
    SPI_SCK_1;  
  delay_us(1);
  SPI_SCK_0;
    
  } 
}

void LCD_send_cmd(unsigned char o_command)
  {
    SPI_DC_0;
    delay_us(1);
    SPI_CS_0;
    SPI_SendByte(o_command);
    SPI_CS_1;
   
    //SPI_DC_1;
  }
void LCD_send_data(unsigned char o_data)
  { 
    SPI_DC_1;
    delay_us(1);
    SPI_CS_0;
    SPI_SendByte(o_data);
    SPI_CS_1;
    
   }
void Column_set(unsigned char column)
  {
  column+=LCD_COLUMN_OFFSET;
    LCD_send_cmd(0x10|(column>>4));    //设置列地址高位
    LCD_send_cmd(0x00|(column&0x0f));   //设置列地址低位  
       
  }
void Page_set(unsigned char page)
  {
    LCD_send_cmd(0xb0+page);
  }
void LCD_clear(void)
  {
    unsigned char page,column;
    for(page=0;page<LCD_PAGE_NUMBER;page++)             //page loop
      { 
          Page_set(page);
          Column_set(0);    
          for(column=0;column<LCD_COLUMN_NUMBER;column++)  //column loop
            {
              LCD_send_data(0x00);
            }
      }
  }
void LCD_full(void)
  {
    unsigned char page,column;
    for(page=0;page<LCD_PAGE_NUMBER;page++)             //page loop
      { 
        Page_set(page);
        Column_set(0);    
  for(column=0;column<LCD_COLUMN_NUMBER;column++)  //column loop
          {
            LCD_send_data(0xff);
          }
      }
  }
void LCD_init(void)
  {
    unsigned char i;
    for(i=0;i<LCD_COMMAND_NUMBER;i++)
      {
        LCD_send_cmd(LCD_init_cmd[i]);
      }
  }

void Picture_display(const unsigned char *ptr_pic)
  {
    unsigned char page,column;
    for(page=0;page<(LCD_LINE_NUMBER/8);page++)        //page loop
      { 
  Page_set(page);
  Column_set(0);    
  for(column=0;column<LCD_COLUMN_NUMBER;column++)  //column loop
          {
            LCD_send_data(*ptr_pic++);
          }
      }
  }
void Picture_ReverseDisplay(const unsigned char *ptr_pic)
{
    unsigned char page,column,data;
    for(page=0;page<(LCD_LINE_NUMBER/8);page++)        //page loop
      { 
  Page_set(page);
  Column_set(0);    
  for(column=0;column<LCD_COLUMN_NUMBER;column++)  //column loop
          {
            data=*ptr_pic++;
            data=~data;
            LCD_send_data(data);
          }
      }
  }

void dis_data_90_(void)          //15*16字库转换90度旋转
{
  unsigned char  x=0,y=0,z=0x01;
  for (x=0;x<32;x++)
  {
    CHAR_DATA[x]=0; //字体缓存清零
  }
  z=0x01;
  for (x=16;x<24;x++)
  {
    for (y=0;y<8;y++)
    {
      CHAR_DATA[x]<<= 1;
      if (READ_BACK[y] & z)
        
      {
        CHAR_DATA[x]|=0x01;
      }     
    }
    z=z<<1;
  }
  z=0x01;
  for (x=0;x<8;x++)
  {
    for (y=8;y<16;y++)
    {
      CHAR_DATA[x]<<= 1;
      if (READ_BACK[y] & z)
        
      {
        CHAR_DATA[x]|=0x01;
      }     
    }
    z=z<<1;
  }
  z=0x01;
  for (x=24;x<32;x++)
  {
    for (y=16;y<24;y++)
    {
      CHAR_DATA[x]<<= 1;
      if (READ_BACK[y] & z)
        
      {
        CHAR_DATA[x]|=0x01;
      }     
    }
    z=z<<1;
  }
  z=0x01;
  for (x=8 ;x<16;x++)
  {
    for (y=24;y<32;y++)
    {
      CHAR_DATA[x]<<= 1;
      if (READ_BACK[y] & z)
        
      {
        CHAR_DATA[x]|=0x01;
      }     
    }
    z=z<<1;
  }
}
  void display_one_word(unsigned char X_ADD,unsigned char Y_ADD,const unsigned char * chinese_char)
{
  unsigned char x=0;
 /* union 
  {
    unsigned int int_data;
    unsigned char char_data[2];
    
  }int_2_char;
  int_2_char.int_data = chinese_char;*/
  
  for (x=0;x<32;x++)
    {
      READ_BACK[x]= * (chinese_char+x);
    }
  #if (LCD_DIS_CHINA_ROT == 90)
    dis_data_90_();
  #else 
    for (x=0;x<32;x++)
    {
      CHAR_DATA[x]= * (chinese_char+x);
    }
  #endif
  Page_set(Y_ADD);
  Column_set(X_ADD);
  
  for (x=0;x<16;x++)
  {
    LCD_send_data(CHAR_DATA[x]);
  }
  
  Page_set(Y_ADD+1);
  Column_set(X_ADD);
  
  for (x=16;x<32;x++)
  {
    LCD_send_data(CHAR_DATA[x]);
  }

}

void  setup(){
point=&picture_tab[0];
IO_init();

SPI_RST_0;
delay(30);
SPI_RST_1;
delay(30);
LCD_init();
LCD_full();
delay(500);
LCD_clear();
//Serial.begin(9600); 
}

void  loop(){
Picture_display(point);
delay(1000);

Picture_ReverseDisplay(point);
delay(1000);
    LCD_clear();
display_one_word(8,3,China_tab[0]);
    delay(200);
    display_one_word(24,3,China_tab[1]);
    delay(200);
    display_one_word(40,3,China_tab[2]);
    delay(200);
    display_one_word(56,3,China_tab[3]);
    delay(200);
    display_one_word(72,3,China_tab[4]);
    delay(200);
    display_one_word(88,3,China_tab[5]);
    delay(200);
    display_one_word(104,3,China_tab[6]);
    delay(5000);

}
